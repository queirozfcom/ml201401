#!/usr/bin/env python

# Implementation of KNN algorithm with default K = 5
# This script expects a directory as argument.
# Given directory should have a file called train_set.csv and
# another file called test_set.csv

import helpers.files as files
import helpers.normalizers as normalizers
import helpers.knn as knn

from config.constants import *
from string import replace
import csv
import numpy as np
import math
import random
import sys
import os
import time

if len(sys.argv) < 2:
    print ERROR+""" Please provide the directory where I can 
      find test and train partitions (they should be called "test_set.csv" and 
      "train_set".csv). Optionally, you can also set config options in config/
      constants.py\n"""
    sys.exit()

dir_name = sys.argv[1].lstrip('.').rstrip('/').strip(" ")

if not os.path.isfile(dir_name+'/train_set.csv'):
    print ERROR+" File "+dir_name+"/train_set.csv not found.\n"
    sys.exit()

if not os.path.isfile(dir_name+'/test_set.csv'):
    print ERROR+" File "+dir_name+"/test_set.csv not found.\n"
    sys.exit()

#all ok; let's move forward.

train_set_file = dir_name+'/train_set.csv'
num_rows = files.file_len(train_set_file)
num_attributes = files.num_attributes(train_set_file)

train_set = files.load_into_matrix(train_set_file)
test_set = files.load_into_matrix(dir_name+'/test_set.csv',False)

all_predictions = list()

for row in test_set:
    prediction = 0 # previsão inicial é nula

    neighbours = knn.get_nearest_neighbours(row,train_set,NUM_NEIGHBOURS)
    
    for neighbour in neighbours:
        distance = knn.get_distance(row,neighbour)
        prediction = knn.get_target(neighbour) * (1/distance)

    all_predictions.push(prediction)






